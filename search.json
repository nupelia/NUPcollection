[{"path":"https://nupelia.github.io/NUPcollection/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2022 NUPcollection authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://nupelia.github.io/NUPcollection/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Bruno Stabile. Author, maintainer. Thiago Pedroso. Contributor.","code":""},{"path":"https://nupelia.github.io/NUPcollection/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Stabile B (2023). NUPcollection: R package NUP Collection. R package version 0.0.0.9000.","code":"@Manual{,   title = {NUPcollection: R package for NUP Collection},   author = {Bruno Stabile},   year = {2023},   note = {R package version 0.0.0.9000}, }"},{"path":"https://nupelia.github.io/NUPcollection/index.html","id":"nupcollection-","dir":"","previous_headings":"","what":"R package for NUP Collection","title":"R package for NUP Collection","text":"goal NUPcollection make comparison morphometric data faster accurate, helping taxonomists compare species. created students Nupélia’s Ichthyology Collection (NUP).","code":""},{"path":"https://nupelia.github.io/NUPcollection/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"R package for NUP Collection","text":"can install development version NUPcollection GitHub :","code":"# install.packages(\"remotes\") remotes::install_github(\"nupelia/NUPcollection\")"},{"path":[]},{"path":"https://nupelia.github.io/NUPcollection/index.html","id":"function-abbr_species","dir":"","previous_headings":"Use","what":"Function abbr_species()","title":"R package for NUP Collection","text":"function intended abbreviate genus scientific names make easier read later. abbreviated names identical (like . lacustris Acestrorhynchus lacustris Astyanax lacustris, example), first 3 letters genus used. table presented look like :","code":""},{"path":"https://nupelia.github.io/NUPcollection/index.html","id":"function-format_table","dir":"","previous_headings":"Use","what":"Function format_table()","title":"R package for NUP Collection","text":"function auxiliary tool transform table usually created taxonomists format species_compare() function uses. R uses . decimal mark, change table importing . function, can use pre-installed example table package, sp_example_data","code":"sp_example_data #> # A tibble: 6 x 6 #>   specie `body depth` `head length` `orbit diameter` interorbital predorsal di~1 #>   <chr>  <chr>        <chr>         <chr>            <chr>        <chr>          #> 1 sp1    36.6 - 41.8  21.3 - 23.6   32.6 - 38.3      34.5 - 38.3  47.3 - 51.5    #> 2 sp2    36.5 - 45.4  23.7 - 26.2   34.1 - 38.8      34.8 - 37.8  47.7 - 51.2    #> 3 sp3    38.2 - 44.7  23.7 - 26.3   32.9 - 37.2      37.9 - 44.5  51.3 - 54.7    #> 4 sp4    34.1 - 37.9  21.2 - 24.9   28.7 - 31.8      33.2 - 36.7  48.7 - 52.1    #> 5 sp5    28.3 - 33.4  24.3 - 27.1   33.4 - 36.8      31.7 - 33.1  52.2 - 55.8    #> 6 sp6    34.8 - 37.9  25.1 - 28.9   33.2 - 37.1      35.5 - 37.8  51.7 - 56.9    #> # ... with abbreviated variable name 1: `predorsal distance` table1 <- format_table(sp_example_data)  #formatted table table1 #> # A tibble: 30 x 4 #>    especie medidas              min   max #>    <chr>   <chr>              <dbl> <dbl> #>  1 sp1     body depth          36.6  41.8 #>  2 sp1     head length         21.3  23.6 #>  3 sp1     orbit diameter      32.6  38.3 #>  4 sp1     interorbital        34.5  38.3 #>  5 sp1     predorsal distance  47.3  51.5 #>  6 sp2     body depth          36.5  45.4 #>  7 sp2     head length         23.7  26.2 #>  8 sp2     orbit diameter      34.1  38.8 #>  9 sp2     interorbital        34.8  37.8 #> 10 sp2     predorsal distance  47.7  51.2 #> # ... with 20 more rows"},{"path":"https://nupelia.github.io/NUPcollection/index.html","id":"function-species_compare","dir":"","previous_headings":"Use","what":"Function species_compare()","title":"R package for NUP Collection","text":"species_compare() function used analyze morphometric data different populations checking overlap data. function analyzes values obtained particular measure compares measures populations, returns data overlap, together name measure, range variation values, population differs. function requires specially formatted data table, can obtained format_table() function. using function, following arguments: data: dataset used function. species_target: target species compare. species_var: species variable name. Defaults “especie”. measure_var: measure variable name. Defaults “medidas”. returning dataset adds following variables: species_target: target species compared. min_target: minimum value target species. max_target: maximum value target species. sp_lower: species (1st column) value, lower target species? Returns TRUE FALSE. sp_higher: species (1st column) value, higher target species? Returns TRUE FALSE.","code":"table1 %>%    species_compare(species_target = \"sp1\") #> # A tibble: 9 x 9 #>   especie medidas              min   max speci~1 min_t~2 max_t~3 sp_lo~4 sp_hi~5 #>   <chr>   <chr>              <dbl> <dbl> <chr>     <dbl>   <dbl> <lgl>   <lgl>   #> 1 sp5     body depth          28.3  33.4 sp1        36.6    41.8 TRUE    FALSE   #> 2 sp2     head length         23.7  26.2 sp1        21.3    23.6 FALSE   TRUE    #> 3 sp3     head length         23.7  26.3 sp1        21.3    23.6 FALSE   TRUE    #> 4 sp5     head length         24.3  27.1 sp1        21.3    23.6 FALSE   TRUE    #> 5 sp6     head length         25.1  28.9 sp1        21.3    23.6 FALSE   TRUE    #> 6 sp5     interorbital        31.7  33.1 sp1        34.5    38.3 TRUE    FALSE   #> 7 sp4     orbit diameter      28.7  31.8 sp1        32.6    38.3 TRUE    FALSE   #> 8 sp5     predorsal distance  52.2  55.8 sp1        47.3    51.5 FALSE   TRUE    #> 9 sp6     predorsal distance  51.7  56.9 sp1        47.3    51.5 FALSE   TRUE    #> # ... with abbreviated variable names 1: species_target, 2: min_target, #> #   3: max_target, 4: sp_lower, 5: sp_higher"},{"path":[]},{"path":"https://nupelia.github.io/NUPcollection/index.html","id":"function-format_table_cpue","dir":"","previous_headings":"","what":"Function format_table_cpue()","title":"R package for NUP Collection","text":"format_table_cpue function designed take data frame, reformat long format. function uses pivot_longer function tidyr package reshape data. function takes two arguments: data: data frame needs reformatted. first_sp_col: first column species column, used reshape data. argument default value 3. function returns data frame long format, columns site, species cpue.","code":"df <- data.frame(   site = c(\"A\", \"B\", \"C\", \"D\"),   gear = c(1, 1, 1, 1),   sp1 = c(2, 3, 5, 6),   sp2 = c(1, 4, 2, 7),   sp3 = c(4, 5, 1, 8))  # View the expected dataframe df #>   site gear sp1 sp2 sp3 #> 1    A    1   2   1   4 #> 2    B    1   3   4   5 #> 3    C    1   5   2   1 #> 4    D    1   6   7   8 # Format the table of CPUE df2 <- format_table_cpue(df, first_sp_col = 3)  df2 #> # A tibble: 12 x 4 #>    site   gear species  cpue #>    <chr> <dbl> <chr>   <dbl> #>  1 A         1 sp1         2 #>  2 A         1 sp2         1 #>  3 A         1 sp3         4 #>  4 B         1 sp1         3 #>  5 B         1 sp2         4 #>  6 B         1 sp3         5 #>  7 C         1 sp1         5 #>  8 C         1 sp2         2 #>  9 C         1 sp3         1 #> 10 D         1 sp1         6 #> 11 D         1 sp2         7 #> 12 D         1 sp3         8"},{"path":"https://nupelia.github.io/NUPcollection/index.html","id":"function-add_mgms","dir":"","previous_headings":"","what":"Function add_mgms()","title":"R package for NUP Collection","text":"add_mgms function designed take data frame, add Multigear Mean Standardization (MGMS) column . function uses group_by, mutate, ungroup, select functions dplyr package perform calculations reshape data. function takes three arguments: data: data frame needs modified. site_var: name column data contains site information. argument default value “site”. cpue_var: name column data contains Catch Per Unit Effort (CPUE) information. argument default value “cpue”. function returns original dataframe additional column ‘mgms’ containing result MGMS calculations.","code":"add_mgms(df2, site_var = \"site\", cpue_var = \"cpue\") #> # A tibble: 12 x 5 #>    site   gear species  cpue   mgms #>    <chr> <dbl> <chr>   <dbl>  <dbl> #>  1 A         1 sp1         2 0.167  #>  2 A         1 sp2         1 0.0833 #>  3 A         1 sp3         4 0.333  #>  4 B         1 sp1         3 0.25   #>  5 B         1 sp2         4 0.333  #>  6 B         1 sp3         5 0.417  #>  7 C         1 sp1         5 0.417  #>  8 C         1 sp2         2 0.167  #>  9 C         1 sp3         1 0.0833 #> 10 D         1 sp1         6 0.5    #> 11 D         1 sp2         7 0.583  #> 12 D         1 sp3         8 0.667"},{"path":"https://nupelia.github.io/NUPcollection/reference/abbr_species.html","id":null,"dir":"Reference","previous_headings":"","what":"Abbreviate species — abbr_species","title":"Abbreviate species — abbr_species","text":"Abbreviate species","code":""},{"path":"https://nupelia.github.io/NUPcollection/reference/abbr_species.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Abbreviate species — abbr_species","text":"","code":"abbr_species(data, species_var = \"species\")"},{"path":"https://nupelia.github.io/NUPcollection/reference/abbr_species.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Abbreviate species — abbr_species","text":"data Species dataset species_var Current species variable name. Defalts \"species\"","code":""},{"path":"https://nupelia.github.io/NUPcollection/reference/add_mgms.html","id":null,"dir":"Reference","previous_headings":"","what":"Add MGMS to a dataframe — add_mgms","title":"Add MGMS to a dataframe — add_mgms","text":"function adds Multigear Mean Standardization (MGMS) column dataframe","code":""},{"path":"https://nupelia.github.io/NUPcollection/reference/add_mgms.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add MGMS to a dataframe — add_mgms","text":"","code":"add_mgms(data, site_var = \"site\", cpue_var = \"cpue\")"},{"path":"https://nupelia.github.io/NUPcollection/reference/add_mgms.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add MGMS to a dataframe — add_mgms","text":"data dataframe site_var name column data contains site information cpue_var name column data contains Catch Per Unit Effort (CPUE) information","code":""},{"path":"https://nupelia.github.io/NUPcollection/reference/add_mgms.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add MGMS to a dataframe — add_mgms","text":"dataframe additional column containing MGMS","code":""},{"path":"https://nupelia.github.io/NUPcollection/reference/add_mgms.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add MGMS to a dataframe — add_mgms","text":"","code":"data <- data.frame(site = c(\"A\", \"A\", \"B\", \"B\"),                    cpue = c(5, 10, 15, 20)) add_mgms(data) #> Error in select(., -c(sum_cpue, mean_sum_cpue)): could not find function \"select\""},{"path":"https://nupelia.github.io/NUPcollection/reference/format_table.html","id":null,"dir":"Reference","previous_headings":"","what":"Format table — format_table","title":"Format table — format_table","text":"Format table","code":""},{"path":"https://nupelia.github.io/NUPcollection/reference/format_table.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Format table — format_table","text":"","code":"format_table(   data,   species_var = \"especie\",   measure_var = \"medidas\",   sep = \" - \" )"},{"path":"https://nupelia.github.io/NUPcollection/reference/format_table.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Format table — format_table","text":"data Species dataset species_var species variable name. Defaults \"especie\" measure_var measures variable name. Defaults \"medidas\" sep Separator measures. Defaults \" - \"","code":""},{"path":"https://nupelia.github.io/NUPcollection/reference/format_table_cpue.html","id":null,"dir":"Reference","previous_headings":"","what":"Format table of CPUE into long format — format_table_cpue","title":"Format table of CPUE into long format — format_table_cpue","text":"function takes table Catch Per Unit Effort (CPUE) species columns formats long format","code":""},{"path":"https://nupelia.github.io/NUPcollection/reference/format_table_cpue.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Format table of CPUE into long format — format_table_cpue","text":"","code":"format_table_cpue(data, first_sp_col = 3)"},{"path":"https://nupelia.github.io/NUPcollection/reference/format_table_cpue.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Format table of CPUE into long format — format_table_cpue","text":"data data frame CPUE species columns first_sp_col column number first species column","code":""},{"path":"https://nupelia.github.io/NUPcollection/reference/format_table_cpue.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Format table of CPUE into long format — format_table_cpue","text":"data frame long format","code":""},{"path":"https://nupelia.github.io/NUPcollection/reference/format_table_cpue.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Format table of CPUE into long format — format_table_cpue","text":"","code":"# Create a sample data frame df <- data.frame(   site = c(\"A\", \"B\", \"C\", \"D\"),   gear = c(1, 1, 1, 1),   sp1 = c(2, 3, 5, 6),   sp2 = c(1, 4, 2, 7),   sp3 = c(4, 5, 1, 8))  # Format the table of CPUE format_table_cpue(df) #> Error in loadNamespace(x): there is no package called ‘tidyr’"},{"path":"https://nupelia.github.io/NUPcollection/reference/pipe.html","id":null,"dir":"Reference","previous_headings":"","what":"Pipe operator — %>%","title":"Pipe operator — %>%","text":"See magrittr::%>% details.","code":""},{"path":"https://nupelia.github.io/NUPcollection/reference/pipe.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pipe operator — %>%","text":"","code":"lhs %>% rhs"},{"path":"https://nupelia.github.io/NUPcollection/reference/pipe.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Pipe operator — %>%","text":"lhs value magrittr placeholder. rhs function call using magrittr semantics.","code":""},{"path":"https://nupelia.github.io/NUPcollection/reference/pipe.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Pipe operator — %>%","text":"result calling rhs(lhs).","code":""},{"path":"https://nupelia.github.io/NUPcollection/reference/sp_example_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Species example data — sp_example_data","title":"Species example data — sp_example_data","text":"Species example data","code":""},{"path":"https://nupelia.github.io/NUPcollection/reference/sp_example_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Species example data — sp_example_data","text":"","code":"sp_example_data"},{"path":"https://nupelia.github.io/NUPcollection/reference/sp_example_data.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Species example data — sp_example_data","text":"data frame 6 rows 6 columns:","code":""},{"path":"https://nupelia.github.io/NUPcollection/reference/sp_example_data.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Species example data — sp_example_data","text":"Personal data","code":""},{"path":"https://nupelia.github.io/NUPcollection/reference/species_compare.html","id":null,"dir":"Reference","previous_headings":"","what":"Species compare — species_compare","title":"Species compare — species_compare","text":"Species compare","code":""},{"path":"https://nupelia.github.io/NUPcollection/reference/species_compare.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Species compare — species_compare","text":"","code":"species_compare(   data,   species_target,   species_var = \"especie\",   measure_var = \"medidas\" )"},{"path":"https://nupelia.github.io/NUPcollection/reference/species_compare.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Species compare — species_compare","text":"data Species dataset species_target target species compare species_var species variable name. Defaults \"especie\" measure_var measure variable name. Defaults \"medidas\"","code":""}]
